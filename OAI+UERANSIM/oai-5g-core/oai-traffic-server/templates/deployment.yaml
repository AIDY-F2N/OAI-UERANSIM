{{- if .Values.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    app.kubernetes.io/version: "v1"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Chart.Name }}
      app.kubernetes.io/instance: {{ .Chart.Name }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        id: "{{ .Values.id }}" #"1" #1/2
        app_ad: "{{ .Values.app_ad }}" #"5" #Slice differentiator
        nb_pods: "{{ .Values.nb_pods }}" #"2" #number of pods in the slice
        app.kubernetes.io/name: {{ .Chart.Name }}
        app.kubernetes.io/instance: {{ .Chart.Name }}
      {{- if .Values.multus.create }}
      annotations:
        k8s.v1.cni.cncf.io/networks: >-
              [{
                   "name": "{{ .Chart.Name }}-net1",
                   "default-route": ["{{ .Values.multus.defaultGateway }}"]
              }]
      {{- end }}
    spec:
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
    {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        {{ toYaml .Values.imagePullSecrets | indent 8 }}
    {{- end }}
      initContainers:
        - name: init
          image: docker.io/oaisoftwarealliance/oai-tcpdump-init:alpine-3.20
          imagePullPolicy: IfNotPresent
          command:
            - /bin/sh
            - -c
            - until ncat -zv {{ .Values.config.upfHost }} 2152 --udp ; do echo waiting for oai-upf to start; sleep 1; done
          resources:
            requests:
              memory: 50Mi
              cpu: 1m
            limits:
              memory: 50Mi
              cpu: 1m
      containers:
      - name: iperf3
        volumeMounts:
        - mountPath: /tmp/script.sh
          name: scripts
          subPath: script.sh 
        command: ["/tmp/script.sh"]
        image: "{{ .Values.trafficServer.repository }}:{{ .Values.trafficServer.version }}"
        {{- if .Values.resources.define}}
        resources:
          requests:
            memory: {{ .Values.resources.requests.memory | quote }}
            cpu: {{ .Values.resources.requests.cpu | quote }}
          limits:
            memory: {{ .Values.resources.limits.memory | quote }}
            cpu: {{ .Values.resources.limits.cpu | quote }}
        {{- end}}
        imagePullPolicy: IfNotPresent
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        {{- if .Values.readinessProbe}}
        readinessProbe:
          exec:
            command:
            - pgrep
            - iperf3
          initialDelaySeconds: 5
          periodSeconds: 3
        {{- end}}
        {{- if .Values.livenessProbe}}
        livenessProbe:
          exec:
            command:
            - pgrep
            - iperf3
          initialDelaySeconds: 10
          periodSeconds: 5
        {{- end}}
      volumes:
      - name: scripts
        configMap:
          name: iperf-pod
          defaultMode: 0777
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: "{{ .Values.schedulerName }}"
      serviceAccountName: {{ .Chart.Name }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- if .Values.nodeSelector}}
      nodeSelector:
         {{- toYaml .Values.nodeSelector | nindent 12 }}
      {{- end }}
      {{- if .Values.nodeName}}
      nodeName: {{ .Values.nodeName }}
      {{- end }}
{{- end }}
