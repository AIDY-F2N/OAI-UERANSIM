apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    {{- include "oai-amf.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "oai-amf.selectorLabels" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        schedulingStrategy: meetup
        id: "{{ .Values.id }}" #"1" #1/2
        slice_sst: "{{ .Values.slice_sst }}" #"3" #EMBB
        slice_sd: "{{ .Values.slice_sd }}" #"5" #Slice differentiator
        nb_pods: "{{ .Values.nb_pods }}" #"2" #number of pods in the slice
        {{- include "oai-amf.selectorLabels" . | nindent 8 }}
    {{- if .Values.multus.n2Interface.create }}
      annotations:
        k8s.v1.cni.cncf.io/networks: >-
          [{
                 "name": "{{ .Chart.Name }}-n2",
                 "interface": "n2"
                {{- if .Values.multus.defaultGateway }}
                 ,"default-route": ["{{ .Values.multus.defaultGateway }}"]
                {{- end }}
                {{- if .Values.multus.n2Interface.Gateway }}
                ,"gateway": "{{ .Values.multus.n2Interface.Gateway }}"
                {{- end }}
          }]
    {{- end }}
    spec:
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
    {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        {{ toYaml .Values.imagePullSecrets | indent 8 }}
    {{- end }}
      containers:
    {{- if .Values.includeTcpDumpContainer }}
      - name: tcpdump
        image: "{{ .Values.tcpdumpimage.repository }}:{{ .Values.tcpdumpimage.version }}"
        imagePullPolicy: {{ .Values.tcpdumpimage.pullPolicy }}
        {{- if .Values.resources.define}}
        resources:
          requests:
            memory: {{ .Values.resources.requests.tcpdump.memory | quote }}
            cpu: {{ .Values.resources.requests.tcpdump.cpu | quote }}
          limits:
            memory: {{ .Values.resources.limits.tcpdump.memory | quote }}
            cpu: {{ .Values.resources.limits.tcpdump.cpu | quote }}
        {{- end}}
        securityContext:
           privileged: true
           capabilities:
              add:
               - NET_ADMIN
              drop:
               - ALL
        {{- if .Values.start.tcpdump}}
        command:
          - /bin/sh
          - -c
          - /usr/sbin/tcpdump -i any -w /tmp/pcap/{{ .Chart.Name }}_`date +%Y-%m-%d_%H_%M-%S-%Z`.pcap
        {{- else}}
        command:
          - /bin/sleep
          - infinity
        {{- end}}
        {{- if .Values.includeTcpDumpContainer}}
        {{- if .Values.persistent.sharedvolume}}
        volumeMounts:
        - mountPath: "/tmp/pcap"
          name: cn5g-pvc
        {{- end}}
        {{- end}}
    {{- end }}
      - name: amf
        image: "{{ .Values.nfimage.repository }}:{{ .Values.nfimage.version }}"
        imagePullPolicy: {{ .Values.nfimage.pullPolicy }}
        volumeMounts:
          - mountPath: /openair-amf/etc
            name: configuration
        {{- if .Values.resources.define}}
        resources:
          requests:
            memory: {{ .Values.resources.requests.nf.memory | quote }}
            cpu: {{ .Values.resources.requests.nf.cpu | quote }}
          limits:
            memory: {{ .Values.resources.limits.nf.memory | quote }}
            cpu: {{ .Values.resources.limits.nf.cpu | quote }}
        {{- end}}
        {{- if .Values.readinessProbe}}
        readinessProbe:
          exec:
            command:
            - /bin/bash
            - /openair-amf/bin/healthcheck.sh
          initialDelaySeconds: 2
          periodSeconds: 5
        {{- end}}
        {{- if .Values.livenessProbe}}
        livenessProbe:
          exec:
            command:
            - /bin/bash
            - /openair-amf/bin/healthcheck.sh
          initialDelaySeconds: 10
          periodSeconds: 5
        {{- end}}
        ports:
        - containerPort: 38412
          name: oai-amf
          protocol: SCTP
        - containerPort: {{ .Values.config.amfInterfaceSBIHTTPPort }}
          name: http1
          protocol: TCP
        - containerPort: {{ .Values.config.amfInterfaceSBIHTTP2Port }}
          name: http2
          protocol: TCP
        {{- if .Values.start.amf}}
        command:
          - /openair-amf/bin/oai_amf
          - -c
          - /openair-amf/etc/amf.conf
          - -o
        {{- else}}
        command:
          - /bin/sleep
          - infinity
        {{- end}}
      volumes:
      {{- if .Values.includeTcpDumpContainer}}
      {{- if .Values.persistent.sharedvolume}}
      - name: cn5g-pvc
        persistentVolumeClaim:
          claimName: cn5g-pvc
      {{- end }}
      {{- end }}
      - configMap:
          name: {{ .Chart.Name }}-configmap
        name: configuration
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: "{{ .Values.schedulerName }}"
      serviceAccountName: {{ .Values.serviceAccount.name }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- if .Values.nodeSelector}}
      nodeSelector: 
         {{- toYaml .Values.nodeSelector | nindent 12 }}
      {{- end }}
      {{- if .Values.nodeName}}
      nodeName: {{ .Values.nodeName }}
      {{- end }}
